{"version":3,"sources":["controls/dateTimePicker/HoursComponent.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,wCAA0C;AAC1C,6BAA+B;AAE/B,6DAAuD;AACvD,kEAAuE;AACvE,2CAA0C;AAE1C;;GAEG;AACH;IAA4C,kCAAyC;IAArF;;IAoCA,CAAC;IAlCQ,+BAAM,GAAb;QAAA,iBAiCC;QAhCC,MAAM,CAAC,CACL,oBAAC,2BAAe,IAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAC7B,KAAK,EAAC,EAAE,EACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,uBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,MAAG,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,oCAAc,CAAC,OAAO,GAAG,IAAI,GAAG,OAAO,CAAE,EACzK,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,cAAc,KAAK,oCAAc,CAAC,OAAO,GAAG,IAAI,GAAG,OAAO,EAC3E,UAAU,EAAE;gBACV,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,OAAO;gBACZ,GAAG,EAAE,QAAQ;gBACb,GAAG,EAAE,MAAM;aACZ,EACD,iBAAiB,EAAE,UAAC,KAAK;gBACvB,IAAI,OAAO,GAAG,EAAE,CAAC;gBACjB,IAAM,KAAK,GAAW,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACjB,OAAO,GAAG,OAAO,CAAC,8BAA8B,CAAC;gBACnD,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,KAAK,oCAAc,CAAC,OAAO,CAAC,CAAC,CAAC;oBACrE,OAAO,GAAG,KAAK,GAAG,EAAE,GAAG,OAAO,CAAC,8BAA8B,GAAG,EAAE,CAAC;gBACrE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,OAAO,GAAG,KAAK,GAAG,EAAE,GAAG,OAAO,CAAC,8BAA8B,GAAG,EAAE,CAAC;gBACrE,CAAC;gBAED,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACd,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC;YACjB,CAAC,GAAI,CACvB,CAAC;IACJ,CAAC;IACH,qBAAC;AAAD,CApCA,AAoCC,CApC2C,KAAK,CAAC,SAAS,GAoC1D","file":"controls/dateTimePicker/HoursComponent.js","sourcesContent":["import * as strings from 'ControlStrings';\nimport * as React from 'react';\nimport { IHoursComponentProps } from './ITimeComponentProps';\nimport { TimeConvention } from './DateTimeConventions';\nimport { MaskedTextField } from 'office-ui-fabric-react/lib/TextField';\nimport { TimeHelper } from './TimeHelper';\n\n/**\n * Hours component, this renders the hours dropdown\n */\nexport default class HoursComponent extends React.Component<IHoursComponentProps, {}> {\n\n  public render(): JSX.Element {\n    return (\n      <MaskedTextField disabled={this.props.disabled}\n                       label=\"\"\n                       value={this.props.value ? TimeHelper.hoursValue(this.props.value, this.props.timeConvention) : `${this.props.timeConvention === TimeConvention.Hours24 ? \"00\" : \"12 AM\"}`}\n                       mask={this.props.timeConvention === TimeConvention.Hours24 ? \"29\" : \"19 AM\"}\n                       maskFormat={{\n                         '1': /[0-1]/,\n                         '2': /[0-2]/,\n                         '9': /[0-9]/,\n                         'A': /[AaPp]/,\n                         'M': /[Mm]/\n                       }}\n                       onGetErrorMessage={(value) => {\n                         let message = \"\";\n                         const hours: number = parseInt(value);\n                         if (isNaN(hours)) {\n                           message = strings.DateTimePickerHourValueInvalid;\n                         }\n\n                         if (!message && this.props.timeConvention === TimeConvention.Hours24) {\n                           message = hours > 23 ? strings.DateTimePickerHourValueInvalid : \"\";\n                         } else {\n                           message = hours > 12 ? strings.DateTimePickerHourValueInvalid : \"\";\n                         }\n\n                         if (!message) {\n                          this.props.onChange(value);\n                         }\n\n                         return message;\n                       }} />\n    );\n  }\n}\n"],"sourceRoot":"../../../src"}