var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { sealed } from '@microsoft/decorators';
import AlertDialog from './AlertDialog';
import PromptDialog from './PromptDialog';
var SecondaryDialogProvider =  (function () {
    function SecondaryDialogProvider(primaryManager, ownerRequestId) {
        this._ownerRequestId = ownerRequestId;
        this._primaryManager = primaryManager;
    }
    SecondaryDialogProvider.prototype.alert = function (message, options) {
        var dialog = new AlertDialog(message);
        return this.show(dialog, options);
    };
    SecondaryDialogProvider.prototype.prompt = function (message, options) {
        var resolve = function () { return; };
        var promise = new Promise(function (res) { return resolve = res; });
        var dialog = new PromptDialog(message, resolve, options ? options.defaultValue : undefined);
        this.show(dialog, options);
        return promise;
    };
    SecondaryDialogProvider.prototype.show = function (dialog, options) {
        return this._primaryManager._showSecondary(dialog, this._ownerRequestId, options);
    };
    SecondaryDialogProvider = __decorate([
        sealed
    ], SecondaryDialogProvider);
    return SecondaryDialogProvider;
}());
export default SecondaryDialogProvider;
