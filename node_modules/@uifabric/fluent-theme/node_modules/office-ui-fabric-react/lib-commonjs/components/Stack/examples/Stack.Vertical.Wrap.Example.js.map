{"version":3,"file":"Stack.Vertical.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Wrap.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAA2D;AAC3D,kCAAiC;AAEjC,8DAAoE;AAMpE;IAA8C,oDAAkC;IAC9E,kCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAkDO,qBAAe,GAAG,UAAC,KAAa;YACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,CAAC,CAAC;QAvDA,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,GAAG;SACjB,CAAC;;IACJ,CAAC;IAEM,yCAAM,GAAb;QACU,IAAA,oCAAW,CAAgB;QAEnC,IAAM,WAAW,GAAiB;YAChC,IAAI,EAAE;gBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;gBACxC,MAAM,EAAE,WAAW;gBACnB,SAAS,EAAE;oBACT,QAAQ,EAAE;wBACR,UAAU,EAAE,QAAQ;wBACpB,UAAU,EAAE,wBAAc,CAAC,YAAY;wBACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;wBAC3B,MAAM,EAAE,EAAE;wBACV,OAAO,EAAE,MAAM;wBACf,cAAc,EAAE,QAAQ;wBACxB,KAAK,EAAE,EAAE;qBACV;iBACF;aACF;SACF,CAAC;QAEF,IAAM,kBAAkB,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAC7D,IAAM,eAAe,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAE1D,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,kBAAkB;YAC/B,oBAAC,eAAM,IACL,KAAK,EAAC,4EAA4E,EAClF,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;YAEF,oBAAC,aAAK,IAAC,IAAI,QAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe;gBACtD,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc;gBACd,sCAAc,CACR,CACF,CACT,CAAC;IACJ,CAAC;IAKH,+BAAC;AAAD,CAAC,AA3DD,CAA8C,KAAK,CAAC,SAAS,GA2D5D;AA3DY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack } from '../Stack';\nimport { IStackStyles, IStackTokens } from '../Stack.types';\nimport { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\nexport class VerticalStackWrapExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 420\n    };\n  }\n\n  public render(): JSX.Element {\n    const { stackHeight } = this.state;\n\n    const stackStyles: IStackStyles = {\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: stackHeight,\n        selectors: {\n          '& span': {\n            alignItems: 'center',\n            background: DefaultPalette.themePrimary,\n            color: DefaultPalette.white,\n            height: 50,\n            display: 'flex',\n            justifyContent: 'center',\n            width: 50\n          }\n        }\n      }\n    };\n\n    const sectionStackTokens: IStackTokens = { childrenGap: 10 };\n    const wrapStackTokens: IStackTokens = { childrenGap: 20 };\n\n    return (\n      <Stack tokens={sectionStackTokens}>\n        <Slider\n          label=\"Change the stack height to see how child items wrap onto multiple columns:\"\n          min={1}\n          max={420}\n          step={1}\n          defaultValue={420}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n\n        <Stack wrap styles={stackStyles} tokens={wrapStackTokens}>\n          <span>1</span>\n          <span>2</span>\n          <span>3</span>\n          <span>4</span>\n          <span>5</span>\n          <span>6</span>\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}