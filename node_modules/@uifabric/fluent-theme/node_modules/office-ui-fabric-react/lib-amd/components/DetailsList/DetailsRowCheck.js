define(["require", "exports", "tslib", "react", "../../Utilities", "../../Check", "../Check/Check.styles", "./DetailsRowCheck.styles", "../../Utilities"], function (require, exports, tslib_1, React, Utilities_1, Check_1, Check_styles_1, DetailsRowCheck_styles_1, Utilities_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var getCheckClassNames = Utilities_2.classNamesFunction();
    var getClassNames = Utilities_2.classNamesFunction();
    var DetailsRowCheckBase = function (props) {
        var _a = props.isVisible, isVisible = _a === void 0 ? false : _a, _b = props.canSelect, canSelect = _b === void 0 ? false : _b, _c = props.anySelected, anySelected = _c === void 0 ? false : _c, _d = props.selected, selected = _d === void 0 ? false : _d, _e = props.isHeader, isHeader = _e === void 0 ? false : _e, className = props.className, checkClassName = props.checkClassName, styles = props.styles, theme = props.theme, compact = props.compact, onRenderDetailsCheckbox = props.onRenderDetailsCheckbox, buttonProps = tslib_1.__rest(props, ["isVisible", "canSelect", "anySelected", "selected", "isHeader", "className", "checkClassName", "styles", "theme", "compact", "onRenderDetailsCheckbox"]);
        var checkStyles = Check_styles_1.getStyles({ theme: theme });
        var checkClassNames = getCheckClassNames(checkStyles, {
            theme: theme
        });
        var classNames = getClassNames(styles, {
            theme: theme,
            canSelect: canSelect,
            selected: selected,
            anySelected: anySelected,
            className: className,
            isHeader: isHeader,
            isVisible: isVisible,
            compact: compact
        });
        var defaultCheckboxRender = function (checkboxProps) {
            return React.createElement(Check_1.Check, { checked: checkboxProps.checked });
        };
        var detailsCheckboxProps = {
            checked: selected
        };
        return canSelect ? (React.createElement("div", tslib_1.__assign({}, buttonProps, { role: "checkbox", className: Utilities_1.css(classNames.root, classNames.check, checkClassNames.checkHost), "aria-checked": selected, "data-selection-toggle": true, "data-automationid": "DetailsRowCheck" }), onRenderDetailsCheckbox
            ? onRenderDetailsCheckbox(detailsCheckboxProps, defaultCheckboxRender)
            : defaultCheckboxRender(detailsCheckboxProps))) : (React.createElement("div", tslib_1.__assign({}, buttonProps, { className: Utilities_1.css(classNames.root, classNames.check) })));
    };
    exports.DetailsRowCheck = Utilities_1.styled(DetailsRowCheckBase, DetailsRowCheck_styles_1.getStyles, undefined, { scope: 'DetailsRowCheck' });
});
//# sourceMappingURL=DetailsRowCheck.js.map