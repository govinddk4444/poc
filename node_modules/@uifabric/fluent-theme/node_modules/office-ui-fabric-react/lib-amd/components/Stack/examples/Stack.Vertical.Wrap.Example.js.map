{"version":3,"file":"Stack.Vertical.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Wrap.Example.tsx"],"names":[],"mappings":";;;IAUA;QAA8C,oDAAkC;QAC9E,kCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAkDO,qBAAe,GAAG,UAAC,KAAa;gBACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC;YAvDA,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,GAAG;aACjB,CAAC;;QACJ,CAAC;QAEM,yCAAM,GAAb;YACU,IAAA,oCAAW,CAAgB;YAEnC,IAAM,WAAW,GAAiB;gBAChC,IAAI,EAAE;oBACJ,UAAU,EAAE,wBAAc,CAAC,aAAa;oBACxC,MAAM,EAAE,WAAW;oBACnB,SAAS,EAAE;wBACT,QAAQ,EAAE;4BACR,UAAU,EAAE,QAAQ;4BACpB,UAAU,EAAE,wBAAc,CAAC,YAAY;4BACvC,KAAK,EAAE,wBAAc,CAAC,KAAK;4BAC3B,MAAM,EAAE,EAAE;4BACV,OAAO,EAAE,MAAM;4BACf,cAAc,EAAE,QAAQ;4BACxB,KAAK,EAAE,EAAE;yBACV;qBACF;iBACF;aACF,CAAC;YAEF,IAAM,kBAAkB,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;YAC7D,IAAM,eAAe,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;YAE1D,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,kBAAkB;gBAC/B,oBAAC,eAAM,IACL,KAAK,EAAC,4EAA4E,EAClF,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;gBAEF,oBAAC,aAAK,IAAC,IAAI,QAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe;oBACtD,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc;oBACd,sCAAc,CACR,CACF,CACT,CAAC;QACJ,CAAC;QAKH,+BAAC;IAAD,CAAC,AA3DD,CAA8C,KAAK,CAAC,SAAS,GA2D5D;IA3DY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { Stack } from '../Stack';\nimport { IStackStyles, IStackTokens } from '../Stack.types';\nimport { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\nexport class VerticalStackWrapExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 420\n    };\n  }\n\n  public render(): JSX.Element {\n    const { stackHeight } = this.state;\n\n    const stackStyles: IStackStyles = {\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: stackHeight,\n        selectors: {\n          '& span': {\n            alignItems: 'center',\n            background: DefaultPalette.themePrimary,\n            color: DefaultPalette.white,\n            height: 50,\n            display: 'flex',\n            justifyContent: 'center',\n            width: 50\n          }\n        }\n      }\n    };\n\n    const sectionStackTokens: IStackTokens = { childrenGap: 10 };\n    const wrapStackTokens: IStackTokens = { childrenGap: 20 };\n\n    return (\n      <Stack tokens={sectionStackTokens}>\n        <Slider\n          label=\"Change the stack height to see how child items wrap onto multiple columns:\"\n          min={1}\n          max={420}\n          step={1}\n          defaultValue={420}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n\n        <Stack wrap styles={stackStyles} tokens={wrapStackTokens}>\n          <span>1</span>\n          <span>2</span>\n          <span>3</span>\n          <span>4</span>\n          <span>5</span>\n          <span>6</span>\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}