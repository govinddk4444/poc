import * as tslib_1 from "tslib";
import * as React from 'react';
import { Stack } from '../Stack';
import { DefaultPalette } from 'office-ui-fabric-react/lib/Styling';
var HorizontalStackSpacingExample = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalStackSpacingExample, _super);
    function HorizontalStackSpacingExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalStackSpacingExample.prototype.render = function () {
        var stackStyles = {
            root: {
                background: DefaultPalette.themeTertiary,
                width: 300,
                selectors: {
                    '> *': {
                        alignItems: 'center',
                        background: DefaultPalette.themePrimary,
                        color: DefaultPalette.white,
                        display: 'flex',
                        height: 50,
                        justifyContent: 'center',
                        width: 50
                    }
                }
            }
        };
        var sectionStackTokens = { childrenGap: 10 };
        var numericalSpacingStackTokens = {
            childrenGap: 10,
            padding: 10
        };
        var customSpacingStackTokens = {
            childrenGap: '10%',
            padding: 's1 15%'
        };
        var themedExtraSmallStackTokens = {
            childrenGap: 's2',
            padding: 's2'
        };
        var themedSmallStackTokens = {
            childrenGap: 's1',
            padding: 's1'
        };
        var themedMediumStackTokens = {
            childrenGap: 'm',
            padding: 'm'
        };
        var themedLargeStackTokens = {
            childrenGap: 'l1',
            padding: 'l1'
        };
        var themedExtraLargeStackTokens = {
            childrenGap: 'l2',
            padding: 'l2'
        };
        return (React.createElement(Stack, { tokens: sectionStackTokens },
            React.createElement(Stack, { horizontal: true, disableShrink: true, horizontalAlign: "space-between" },
                React.createElement(Stack, null,
                    React.createElement("span", null, "Numerical spacing"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: numericalSpacingStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Custom spacing"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: customSpacingStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3")))),
            React.createElement(Stack, { horizontal: true, disableShrink: true, horizontalAlign: "space-between" },
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (extra small)"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: themedExtraSmallStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (small)"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: themedSmallStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (medium)"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: themedMediumStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3")))),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "space-between" },
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (large)"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: themedLargeStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))),
                React.createElement(Stack, null,
                    React.createElement("span", null, "Themed spacing (extra large)"),
                    React.createElement(Stack, { horizontal: true, styles: stackStyles, tokens: themedExtraLargeStackTokens },
                        React.createElement("span", null, "1"),
                        React.createElement("span", null, "2"),
                        React.createElement("span", null, "3"))))));
    };
    return HorizontalStackSpacingExample;
}(React.Component));
export { HorizontalStackSpacingExample };
//# sourceMappingURL=Stack.Horizontal.Spacing.Example.js.map