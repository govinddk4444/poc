import * as tslib_1 from "tslib";
import * as React from 'react';
import { css, styled } from '../../Utilities';
import { Check } from '../../Check';
import { getStyles as getCheckStyles } from '../Check/Check.styles';
import { getStyles } from './DetailsRowCheck.styles';
import { classNamesFunction } from '../../Utilities';
var getCheckClassNames = classNamesFunction();
var getClassNames = classNamesFunction();
var DetailsRowCheckBase = function (props) {
    var _a = props.isVisible, isVisible = _a === void 0 ? false : _a, _b = props.canSelect, canSelect = _b === void 0 ? false : _b, _c = props.anySelected, anySelected = _c === void 0 ? false : _c, _d = props.selected, selected = _d === void 0 ? false : _d, _e = props.isHeader, isHeader = _e === void 0 ? false : _e, className = props.className, checkClassName = props.checkClassName, styles = props.styles, theme = props.theme, compact = props.compact, onRenderDetailsCheckbox = props.onRenderDetailsCheckbox, buttonProps = tslib_1.__rest(props, ["isVisible", "canSelect", "anySelected", "selected", "isHeader", "className", "checkClassName", "styles", "theme", "compact", "onRenderDetailsCheckbox"]);
    var checkStyles = getCheckStyles({ theme: theme });
    var checkClassNames = getCheckClassNames(checkStyles, {
        theme: theme
    });
    var classNames = getClassNames(styles, {
        theme: theme,
        canSelect: canSelect,
        selected: selected,
        anySelected: anySelected,
        className: className,
        isHeader: isHeader,
        isVisible: isVisible,
        compact: compact
    });
    var defaultCheckboxRender = function (checkboxProps) {
        return React.createElement(Check, { checked: checkboxProps.checked });
    };
    var detailsCheckboxProps = {
        checked: selected
    };
    return canSelect ? (React.createElement("div", tslib_1.__assign({}, buttonProps, { role: "checkbox", className: css(classNames.root, classNames.check, checkClassNames.checkHost), "aria-checked": selected, "data-selection-toggle": true, "data-automationid": "DetailsRowCheck" }), onRenderDetailsCheckbox
        ? onRenderDetailsCheckbox(detailsCheckboxProps, defaultCheckboxRender)
        : defaultCheckboxRender(detailsCheckboxProps))) : (React.createElement("div", tslib_1.__assign({}, buttonProps, { className: css(classNames.root, classNames.check) })));
};
export var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, { scope: 'DetailsRowCheck' });
//# sourceMappingURL=DetailsRowCheck.js.map